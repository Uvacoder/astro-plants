---
const baseUrl = import.meta.env.PUBLIC_BASE_URL
// TODO: replace list with fetch once circular dependency is worked out
// const plants = Astro.fetchContent('../pages/*.md');
// const images = plants.map((plant) => plant.image)
const images = [
	'lavender',
	'monsteraadansonii',
	'newpothos',
	'pothos',
	'rosemary',
	'sage',
	'spiderplant',
	'zebraplant'
]
---
<a href={baseUrl}>
	<title>Spotted</title>
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 169.2 50.1" role="presentational">
		<path d="M11.7 39c8.4 0 13.7-3.4 13.7-11.3 0-5.8-3.2-8.7-9-10.5L12.6 16c-3.8-1.2-6-2.2-6-5.5 0-3.1 2.4-5.1 6-5.1 4.1 0 6.4 2 8.3 5.7.3.4.6.4 1 .3.6 0 .7-.1.7-.7v-6c0-.5-.2-.8-.8-1a29.6 29.6 0 0 0-8.5-1C6.6 2.6.8 6.1.8 12.7c0 5 2.6 8 8.3 10.4l4 1.6c2.7 1 5.3 2.5 5.3 5.8 0 3.9-2.5 5.9-6.6 5.9-5.1 0-7.7-2-10-8-.3-.6-.4-.5-1.1-.5-.4 0-.7 0-.7.6l.1 7.8c0 .5.2.7.6.9a30.1 30.1 0 0 0 11 1.8Zm28.8 11c.3 0 .4-.3.4-1.1 0-.6 0-.7-.4-.8-3.5-.2-4.4-.6-4.5-4.2v-6.4h.4a7.9 7.9 0 0 0 5 1.6c6.3 0 12.3-4.3 12.3-14.2 0-8.2-4.3-11.8-10-11.8a8.4 8.4 0 0 0-8 4.7h-.3v-4c0-.7 0-1-.6-1-.5 0-3 3-7.7 3-.6 0-.6.5-.6 1 0 .7.2 1 .6 1 2.3.4 2.7.4 2.7 1.8v11.8c0 3.9 0 7.8-.2 11.8 0 4-.4 4.5-2 4.9-1 .2-1.1.2-1.1.9s0 1 .3 1c.5 0 2-.2 5.4-.2h2l6.3.2Zm0-13c-1.7 0-4.6-1.2-4.6-5.2l.1-8.1c0-5.2 3-7.4 5.7-7.4 3.6 0 5 3.5 5 9.5 0 7.1-2 11.1-6.1 11.1Zm28 2c7 0 12.8-4.9 12.8-13.5 0-8.5-6-12.4-12.4-12.4-7.2 0-13 5-13 13.3 0 8.7 6 12.7 12.6 12.7Zm.2-2c-3.3 0-5.7-3-5.7-11s2.6-10.8 5.8-10.8c3 0 5.5 2.8 5.5 10.6 0 8.1-2.4 11.1-5.5 11.1Zm15.8-21.1c1.5 0 1.5.4 1.5 3.2v.3l-.3 14.2c0 4 2.5 5.2 6 5.2a9 9 0 0 0 7.2-3.1 1.3 1.3 0 0 0 .3-.9c0-.5-.4-1.1-.7-1.1-.5 0-1.8 1.9-4 1.9-1.9 0-2.3-1.1-2.4-3.3L92 15.9h7.8s0-2-.6-2H92l.5-10.2c0-.5-.2-.6-1-.6-.7 0-1 0-1 .7a24 24 0 0 1-3 8.1c-.6.7-1.7 1.3-4.3 2.5-.5.1-.6 0-.6.8 0 .7.2.7.7.7Zm17.4 0c1.6 0 1.6.4 1.6 3.2v.3l-.3 14.2c0 4 2.4 5.2 6 5.2a9 9 0 0 0 7.2-3.1 1.3 1.3 0 0 0 .3-.9c0-.5-.4-1.1-.7-1.1-.5 0-1.8 1.9-4.1 1.9-1.8 0-2.3-1.1-2.3-3.3l-.1-16.4h6.9c.5 0 .8-.1.8-.9 0-1.1-.2-1.1-.8-1.1h-7l.6-10.2c0-.5-.2-.6-1-.6-.7 0-1 0-1.1.7a24 24 0 0 1-3 8.1c-.5.7-2 2-5.7 2-.5.2.6 2 .6 2Zm37.8 16.8c-.4 0-2.4 3-6.6 3-5.2 0-7.6-4-8-10.2h12c1.7 0 3.3-.3 3.3-1.8 0-6.6-4.6-10.6-10.1-10.6-6.3 0-12 4.5-12 13.4 0 7.6 4.7 12.6 12.2 12.6a12.5 12.5 0 0 0 9.6-4.4c.3-.4.4-.4.4-1 0-.2-.3-1-.8-1Zm-9.9-17.5c2.6 0 4.2 3.3 4.2 6.8 0 .9-.2 1.5-2.4 1.5h-6.5c.2-5.3 2-8.3 4.7-8.3ZM152.2 39a8 8 0 0 0 7.8-4.8h.3v3.2a.7.7 0 0 0 .7.7h3.3l4.5.2c.2 0 .4-.2.4-1 0-.7 0-.7-.5-.8-2.5-.3-2.3-.7-2.5-3.4V16.8c0-7 .4-13.5.4-16.2 0-.4-.2-.6-.4-.6a1.3 1.3 0 0 0-.8.3 20.8 20.8 0 0 1-8.7 2.4c-.4 0-.3.3-.3 1s.2.9.4.9c2.5 0 2.8 1.1 2.9 3.9l.1 6h-.5A9.2 9.2 0 0 0 154 13c-5.6 0-11.8 4.2-11.8 13.8 0 8.5 4.3 12.2 10 12.2Zm2.4-3.3c-3.8 0-5.5-3.2-5.5-10 0-6.6 2.1-10.6 6.2-10.6 2.6 0 4.7 1.6 4.7 5.9v6.5c0 5.6-2.4 8.2-5.4 8.2Z"/>
	</svg>
	<picture id="logo-img">
		<!-- image is chosen at random from posts and dynamically injected in here on page load -->
	</picture>
</a>

<script hoist define:vars={{images, baseUrl}}>
	window.onload = function() {
		const randomImage = images[Math.floor(Math.random() * images.length)]
		document.getElementById('logo-img').innerHTML = `
			<source type="image/avif" srcset="${baseUrl}/images/${randomImage}.avif"/>
			<source type="image/webp" srcset="${baseUrl}/images/${randomImage}.webp"/>
			<img src="${baseUrl}/images/${randomImage}.png" alt="A potted plant"/>
		`
	}
</script>

<style>
	a
	{
		display: inline-block;
		text-decoration: none;
		position: relative;
		width: 100px;
		padding: 6px 20px;
		-webkit-user-select: none;
		user-select: none;
	}

	svg
	{
		fill: hsl(var(--green) / 1);
		width: 100px;
	}

	#logo-img :global(img)
	{
		position: absolute;
		bottom: 10px;
		left: 0px;
		width: 40px;
		-webkit-user-select: none;
		user-select: none;
	}
</style>